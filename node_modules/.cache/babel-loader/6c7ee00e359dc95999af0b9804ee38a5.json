{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/btsalwa/class/phase-2-hooks-code-challenge-bank-of-flatiron-btsalwa/src/components/AccountContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport TransactionsList from \"./TransactionsList\";\nimport Search from \"./Search\";\nimport AddTransactionForm from \"./AddTransactionForm\";\n\nfunction AccountContainer() {\n  _s();\n\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:8001/transactions\").then(response => response.json()).then(data => {\n      setTransactions(data);\n    });\n  }, []);\n\n  function formSubmission(newtransactioninput) {\n    console.log(newtransactioninput);\n    const configurationData = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newtransactioninput)\n    };\n    fetch(\"http://localhost:8001/transactions\", configurationData).then(response => response.json()).then(newItemTRansacted => setTransactions(transactions => [...transactions, newItemTRansacted])).catch(error => {\n      console.log(error);\n    });\n  }\n\n  function handleSearching(search) {\n    console.log(search);\n    const filterSEarch = transactions.filter(transaction => {\n      return transaction.description.toLowerCase().includes(search.toLowerCase());\n    });\n    setTransactions(filterSEarch);\n    console.log(transactions);\n  }\n\n  function deleteTransaction(transactionid) {\n    const itemToBeDeleted = transactions[transactionid];\n    const dataToDelete = {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const filterTransactions = transactions.filter(singletransaction => singletransaction !== itemToBeDeleted);\n    fetch(`http://localhost:8001/transactions/${transactionid}`, dataToDelete).then(() => setTransactions(filterTransactions));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      onSearch: handleSearching\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTransactionForm, {\n      onSubmission: formSubmission\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransactionsList, {\n      handleDeleting: deleteTransaction,\n      theTransactions: transactions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AccountContainer, \"fSD3Qp8XH90s1xHmc+a/ZZpEoSo=\");\n\n_c = AccountContainer;\nexport default AccountContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountContainer\");","map":{"version":3,"sources":["/home/btsalwa/class/phase-2-hooks-code-challenge-bank-of-flatiron-btsalwa/src/components/AccountContainer.js"],"names":["React","useState","useEffect","TransactionsList","Search","AddTransactionForm","AccountContainer","transactions","setTransactions","fetch","then","response","json","data","formSubmission","newtransactioninput","console","log","configurationData","method","headers","body","JSON","stringify","newItemTRansacted","catch","error","handleSearching","search","filterSEarch","filter","transaction","description","toLowerCase","includes","deleteTransaction","transactionid","itemToBeDeleted","dataToDelete","filterTransactions","singletransaction"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;AAEA,SAASC,gBAAT,GAA4B;AAAA;;AAC1B,QAAM,CAAEC,YAAF,EAAiBC,eAAjB,IAAoCP,QAAQ,CAAC,EAAD,CAAlD;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACdL,MAAAA,eAAe,CAACK,IAAD,CAAf;AACD,KAJH;AAKD,GANQ,EAMN,EANM,CAAT;;AAQA,WAASC,cAAT,CAAwBC,mBAAxB,EAA4C;AACtCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,mBAAZ;AACA,UAAMG,iBAAiB,GAAI;AACzBC,MAAAA,MAAM,EAAE,MADiB;AAEzBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFgB;AAKzBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,mBAAf;AALmB,KAA3B;AAOAN,IAAAA,KAAK,CAAC,oCAAD,EAAsCS,iBAAtC,CAAL,CACER,IADF,CACQC,QAAD,IAAYA,QAAQ,CAACC,IAAT,EADnB,EAEIF,IAFJ,CAESc,iBAAiB,IAAEhB,eAAe,CAACD,YAAY,IAAE,CAAC,GAAGA,YAAJ,EAAiBiB,iBAAjB,CAAf,CAF3C,EAGMC,KAHN,CAGaC,KAAD,IAAS;AAACV,MAAAA,OAAO,CAACC,GAAR,CAAYS,KAAZ;AAAmB,KAHzC;AAIL;;AAED,WAASC,eAAT,CAAyBC,MAAzB,EAAgC;AAC3BZ,IAAAA,OAAO,CAACC,GAAR,CAAYW,MAAZ;AACA,UAAMC,YAAY,GAAGtB,YAAY,CAACuB,MAAb,CAAqBC,WAAD,IAAe;AAAC,aAAOA,WAAW,CAACC,WAAZ,CAAwBC,WAAxB,GAAsCC,QAAtC,CAA+CN,MAAM,CAACK,WAAP,EAA/C,CAAP;AAA6E,KAAjH,CAArB;AAEAzB,IAAAA,eAAe,CAACqB,YAAD,CAAf;AACAb,IAAAA,OAAO,CAACC,GAAR,CAAYV,YAAZ;AACJ;;AACD,WAAS4B,iBAAT,CAA2BC,aAA3B,EAAyC;AAEvC,UAAOC,eAAe,GAAI9B,YAAY,CAAC6B,aAAD,CAAtC;AAEA,UAAOE,YAAY,GAAI;AACrBnB,MAAAA,MAAM,EAAE,QADa;AAErBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAFY,KAAvB;AAMA,UAAMmB,kBAAkB,GAAGhC,YAAY,CAACuB,MAAb,CAC3BU,iBAAD,IAAuBA,iBAAiB,KAAKH,eADjB,CAA3B;AAMA5B,IAAAA,KAAK,CAAE,sCAAqC2B,aAAc,EAArD,EAAuDE,YAAvD,CAAL,CACG5B,IADH,CACQ,MAAIF,eAAe,CAAC+B,kBAAD,CAD3B;AAID;;AAGD,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEZ;AAAlB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,kBAAD;AAAoB,MAAA,YAAY,EAAEb;AAAlC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,gBAAD;AAAmB,MAAA,cAAc,EAAEqB,iBAAnC;AAAsD,MAAA,eAAe,EAAE5B;AAAvE;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GA9DQD,gB;;KAAAA,gB;AAgET,eAAeA,gBAAf","sourcesContent":["import React,{useState,useEffect} from \"react\";\nimport TransactionsList from \"./TransactionsList\";\nimport Search from \"./Search\";\nimport AddTransactionForm from \"./AddTransactionForm\";\n\nfunction AccountContainer() {\n  const [ transactions,  setTransactions] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:8001/transactions\")\n      .then((response) => response.json())\n      .then((data) => {\n        setTransactions(data);\n      });\n  }, []);\n\n  function formSubmission(newtransactioninput){\n        console.log(newtransactioninput)\n        const configurationData =  {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(newtransactioninput),\n        }\n        fetch(\"http://localhost:8001/transactions\",configurationData)\n         .then((response)=>response.json())\n           .then(newItemTRansacted=>setTransactions(transactions=>[...transactions,newItemTRansacted]))\n             .catch((error)=>{console.log(error)})\n  }\n\n  function handleSearching(search){\n       console.log(search)\n       const filterSEarch = transactions.filter((transaction)=>{return transaction.description.toLowerCase().includes(search.toLowerCase()) })\n       \n       setTransactions(filterSEarch)\n       console.log(transactions)\n  }\n  function deleteTransaction(transactionid){\n  \n    const  itemToBeDeleted =  transactions[transactionid]\n    \n    const  dataToDelete =  {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      } \n    }\n    const filterTransactions = transactions.filter(\n\t\t\t(singletransaction) => singletransaction !== itemToBeDeleted\n\t\t);\n    \n\n\n    fetch(`http://localhost:8001/transactions/${transactionid}`,dataToDelete)\n      .then(()=>setTransactions(filterTransactions))\n         \n      \n  }\n  \n\n  return (\n    <div>\n      <Search onSearch={handleSearching}/>\n      <AddTransactionForm onSubmission={formSubmission}/>\n      <TransactionsList  handleDeleting={deleteTransaction} theTransactions={transactions}/>\n    </div>\n  );\n}\n\nexport default AccountContainer;"]},"metadata":{},"sourceType":"module"}