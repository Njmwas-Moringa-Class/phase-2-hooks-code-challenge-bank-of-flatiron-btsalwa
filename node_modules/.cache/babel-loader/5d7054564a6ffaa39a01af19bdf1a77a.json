{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/btsalwa/class/phase-2-hooks-code-challenge-bank-of-flatiron-btsalwa/src/components/AddTransactionForm.js\";\nimport React from \"react\";\n\nfunction AddTransactionForm({\n  addTransaction\n}) {\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    const {\n      date,\n      description,\n      category,\n      amount\n    } = event.target; // step1: new transaction object\n\n    const newTransaction = {\n      date: date.value,\n      description: description.value,\n      category: category.value,\n      amount: amount.value\n    };\n    addTransaction(newTransaction); // reset form\n\n    event.target.reset();\n\n    try {\n      // step2: to send transaction data to server\n      const response = await fetch('http://localhost:8001/transactions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newTransaction)\n      }); // to parse response\n\n      const data = await response.json();\n      console.log(data);\n      addTransaction(newTransaction);\n    } catch (error) {\n      //console.log an error should any occur\n      console.error('Error:', error);\n    }\n  }; // Rendering the add transaction form\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui segment\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"ui form\",\n      onSubmit: handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"description\",\n          placeholder: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"category\",\n          placeholder: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"amount\",\n          placeholder: \"Amount\",\n          step: \"0.01\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui button\",\n        type: \"submit\",\n        children: \"Add Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_c = AddTransactionForm;\nexport default AddTransactionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTransactionForm\");","map":{"version":3,"sources":["/home/btsalwa/class/phase-2-hooks-code-challenge-bank-of-flatiron-btsalwa/src/components/AddTransactionForm.js"],"names":["React","AddTransactionForm","addTransaction","handleFormSubmit","event","preventDefault","date","description","category","amount","target","newTransaction","value","reset","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","error"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,kBAAT,CAA4B;AAAEC,EAAAA;AAAF,CAA5B,EAAgD;AAE9C,QAAMC,gBAAgB,GAAG,MAAOC,KAAP,IAAiB;AACxCA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,WAAR;AAAqBC,MAAAA,QAArB;AAA+BC,MAAAA;AAA/B,QAA0CL,KAAK,CAACM,MAAtD,CAHwC,CAKxC;;AACA,UAAMC,cAAc,GAAG;AACrBL,MAAAA,IAAI,EAAEA,IAAI,CAACM,KADU;AAErBL,MAAAA,WAAW,EAAEA,WAAW,CAACK,KAFJ;AAGrBJ,MAAAA,QAAQ,EAAEA,QAAQ,CAACI,KAHE;AAIrBH,MAAAA,MAAM,EAAEA,MAAM,CAACG;AAJM,KAAvB;AAOAV,IAAAA,cAAc,CAACS,cAAD,CAAd,CAbwC,CAexC;;AACAP,IAAAA,KAAK,CAACM,MAAN,CAAaG,KAAb;;AAEA,QAAI;AACF;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAD,EAAuC;AACjEC,QAAAA,MAAM,EAAE,MADyD;AAEjEC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFwD;AAGjEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,cAAf;AAH2D,OAAvC,CAA5B,CAFE,CAQF;;AACA,YAAMU,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEAnB,MAAAA,cAAc,CAACS,cAAD,CAAd;AACD,KAbD,CAaE,OAAOc,KAAP,EAAc;AACd;AACAF,MAAAA,OAAO,CAACE,KAAR,CAAc,QAAd,EAAwBA,KAAxB;AACD;AACF,GAnCD,CAF8C,CAuC9C;;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACE;AAAM,MAAA,SAAS,EAAC,SAAhB;AAA0B,MAAA,QAAQ,EAAEtB,gBAApC;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,aAAxB;AAAsC,UAAA,WAAW,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,UAAxB;AAAmC,UAAA,WAAW,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,IAAI,EAAC,QAA1B;AAAmC,UAAA,WAAW,EAAC,QAA/C;AAAwD,UAAA,IAAI,EAAC;AAA7D;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,IAAI,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;KAvDQF,kB;AAyDT,eAAeA,kBAAf","sourcesContent":["import React from \"react\";\n\nfunction AddTransactionForm({ addTransaction }) {\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n  \n    const { date, description, category, amount } = event.target;\n  \n    // step1: new transaction object\n    const newTransaction = {\n      date: date.value,\n      description: description.value,\n      category: category.value,\n      amount: amount.value,\n    };\n  \n    addTransaction(newTransaction);\n  \n    // reset form\n    event.target.reset();\n  \n    try {\n      // step2: to send transaction data to server\n      const response = await fetch('http://localhost:8001/transactions', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(newTransaction),\n      });\n  \n      // to parse response\n      const data = await response.json();\n      console.log(data);\n  \n      addTransaction(newTransaction);\n    } catch (error) {\n      //console.log an error should any occur\n      console.error('Error:', error);\n    }\n  };\n\n  // Rendering the add transaction form\n  return (\n    <div className=\"ui segment\">\n      <form className=\"ui form\" onSubmit={handleFormSubmit}>\n        <div className=\"inline fields\">\n          <input type=\"date\" name=\"date\" />\n          <input type=\"text\" name=\"description\" placeholder=\"Description\" />\n          <input type=\"text\" name=\"category\" placeholder=\"Category\" />\n          <input type=\"number\" name=\"amount\" placeholder=\"Amount\" step=\"0.01\" />\n        </div>\n        <button className=\"ui button\" type=\"submit\">\n          Add Transaction\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddTransactionForm;"]},"metadata":{},"sourceType":"module"}